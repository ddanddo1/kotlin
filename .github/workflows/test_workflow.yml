name: '[Test] Android Test'

on:
  workflow_dispatch:
    inputs:
      branch:
        description: '테스트를 실행할 브랜치'
        required: true
        default: 'main'
      folder:
        description: '테스트할 폴더'
        required: true
      class:
        description: '테스트할 클래스'
        required: true
      method:
        description: '테스트할 메소드'
        required: true
      test_scope:
        description: '테스트 범위'
        required: true

jobs:
  android-test:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Java 설정
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Appium 서버 시작
        run: |
          chmod +x runserver.sh
          ./runserver.sh &
          sleep 10  # Appium 서버가 시작될 때까지 대기

      - name: Android 테스트 실행
        run: |
          # 여기에 테스트 실행 명령어를 입력하세요.
          # 예: ./gradlew test --tests "${{ github.event.inputs.folder }}.${{ github.event.inputs.class }}.${{ github.event.inputs.method }}"
          echo "테스트 실행: ${{ github.event.inputs.folder }}.${{ github.event.inputs.class }}.${{ github.event.inputs.method }}"
          echo "테스트 범위: ${{ github.event.inputs.test_scope }}"

    # 여기에 디바이스 연동 단계를 추가할 수 있습니다.
    # - name: 디바이스 연동
    #   run: |
    #     # 디바이스 연동 명령어