name: '[Test] Android Test'

on:
  workflow_dispatch:
    inputs:
      branch:
        description: '테스트를 실행할 브랜치'
        required: true
        default: 'main'
      test_scope:
        description: '테스트 범위'
        required: true
        type: choice
        options:
          - Folder
          - Class
          - Method
      test_target:
        description: '테스트 대상 (선택한 범위에 따라 폴더/클래스/메소드 이름 입력)'
        required: true
        type: string

jobs:
  android-test:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Node.js 설정
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Appium 설치
        run: |
          npm install -g appium
          appium -v

      - name: Java 설정
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Appium 서버 시작
        run: |
          chmod +x runserver.sh
          ./runserver.sh &
          echo "Appium 서버 시작 중..."
          sleep 10  # Appium 서버가 완전히 시작될 때까지 대기
          echo "Appium 서버 시작 완료"

      - name: Android 테스트 실행
        run: |
          echo "테스트 범위: ${{ github.event.inputs.test_scope }}"
          echo "테스트 대상: ${{ github.event.inputs.test_target }}"
          if [ "${{ github.event.inputs.test_scope }}" = "Class" ] && [ "${{ github.event.inputs.test_target }}" = "AndroidTest" ]; then
            ./gradlew test --tests "*.AndroidTest"
          else
            echo "선택한 테스트 범위 또는 대상이 AndroidTest 클래스가 아닙니다."
          fi

      - name: Appium 서버 종료
        if: always()
        run: |
          pkill -f appium || true
          echo "Appium 서버 종료"